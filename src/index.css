@tailwind base;
@tailwind components;
@tailwind utilities;

#app {
  height: 100vh;
}

/* Avoid Chrome to see Safari hack */
@supports (-webkit-touch-callout: none) {
  #app {
    /* The hack for Safari */
    max-height: -webkit-fill-available;
  }
}

:root {
  --animation-speed: 1000ms;
  --animation-speed-fast: 250ms;
  --flip-speed: 2000ms;
  --flip-duration: calc(var(--flip-speed) * 2.5);
  --default-cell-bg-color: theme('colors.white');
  --default-cell-border-color: theme('colors.black');
  --default-cell-text-color: theme('colors.black');
  --absent-cell-bg-color: theme('colors.slate.400');
  --correct-cell-bg-color: theme('colors.green.400');
  --present-cell-bg-color: theme('colors.yellow.400');
}

.dark {
  --default-cell-bg-color: theme('colors.slate.900');
  --default-cell-border-color: theme('colors.white');
  --default-cell-text-color: theme('colors.white');
  --absent-cell-bg-color: theme('colors.slate.700');
}

.high-contrast {
  --correct-cell-bg-color: theme('colors.orange.400');
  --present-cell-bg-color: theme('colors.cyan.400');
}

.cell-fill-animation {
  animation: onTypeCell linear;
  animation-duration: 0.35s;
}

.cell-reveal {
  animation-duration: 0.35s;
  animation-timing-function: linear;
  animation-fill-mode: backwards;
}

.cell-reveal.absent {
  animation-name: revealAbsentCharCell;
}

.cell-reveal.correct {
  animation-name: revealCorrectCharCell;
}

.cell-reveal.present {
  animation-name: revealPresentCharCell;
}

.cell-reveal > .letter-container {
  animation: offsetLetterFlip 0.35s linear;
  animation-fill-mode: backwards;
}

.scale-up {
  transition: all var(--animation-speed-fast);
}

.scale-up:hover {
  transform: scale(1.2);
}

.jiggle {
  animation: jiggle linear;
  animation-duration: var(--animation-speed-fast);
}

.navbar {
  margin-bottom: 2%;
}

.navbar-content {
  display: flex;
  height: 3rem;
  align-items: center;
  justify-content: space-between;
}

.icon-group {
  display: flex;
}

.title {
  font-family: 'Josefin Sans', sans-serif;
}

.inf {
  line-height: 0.2;
}

.flip-card {
  background-color: transparent;
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

.flip-card-inner {
  position: relative;
  text-align: center;
  transition: transform 0.8s;
  transition-delay: calc(8.5 * var(--flip-speed));
  transform-style: preserve-3d;
  animation: calc(var(--flip-speed) * 2.5) doubleflip linear forwards,
    calc(var(--flip-speed) * 2) flip linear forwards,
    calc(var(--flip-speed) * 2.5) doubleflipReverse linear forwards,
    calc(var(--flip-speed) * 2) flipReverse linear forwards;
}

/* Position the front and back side */
.flip-card-front,
.flip-card-back {
  position: absolute;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
}

/* Style the back side */
.flip-card-back {
  transform: rotateY(180deg);
}

.flip-1 {
  animation-delay: var(--flip-speed), calc(var(--flip-speed) * 5),
    calc(var(--flip-speed) * 7.5), calc(var(--flip-speed) * 11.5);
}

.flip-2 {
  animation-delay: calc(2 * var(--flip-speed)), calc(var(--flip-speed) * 5.5),
    calc(var(--flip-speed) * 8.5), calc(var(--flip-speed) * 12);
}

.flip-3 {
  animation-delay: calc(3 * var(--flip-speed)), calc(var(--flip-speed) * 6),
    calc(var(--flip-speed) * 9.5), calc(var(--flip-speed) * 12.5);
}

.flip-4 {
  animation-delay: calc(4 * var(--flip-speed)), calc(var(--flip-speed) * 6.5),
    calc(var(--flip-speed) * 10.5), calc(var(--flip-speed) * 13);
}

@keyframes doubleflip {
  0% {
    transform: rotateY(0deg);
  }
  15% {
    transform: rotateY(180deg);
  }
  25% {
    transform: rotateY(180deg);
  }
  40% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}

@keyframes doubleflipReverse {
  0% {
    transform: rotateY(180deg);
  }
  15% {
    transform: rotateY(0deg);
  }
  25% {
    transform: rotateY(0deg);
  }
  40% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(180deg);
  }
}

@keyframes flip {
  0% {
    transform: rotateY(0deg);
  }
  20% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(180deg);
  }
}

@keyframes flipReverse {
  0% {
    transform: rotateY(180deg);
  }
  20% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}

@keyframes revealAbsentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--absent-cell-bg-color);
    border-color: var(--absent-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealCorrectCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--correct-cell-bg-color);
    border-color: var(--correct-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealPresentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--present-cell-bg-color);
    border-color: var(--present-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

/* Additional animation on the child div to avoid letters turning upside down/snapping back to upright visual glitch */
@keyframes offsetLetterFlip {
  0% {
    transform: rotateX(0deg);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes onTypeCell {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

.shadowed {
  text-shadow: 1px 1px 1px #000000;
}

@keyframes jiggle {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-0.5rem, 0);
  }
  50% {
    transform: translate(0.5rem, 0);
  }
  75% {
    transform: translate(-0.5rem, 0);
  }
  100% {
    transform: translate(0, 0);
  }
}
